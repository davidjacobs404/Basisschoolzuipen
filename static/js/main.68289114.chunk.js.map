{"version":3,"sources":["logo.svg","App.js","index.js"],"names":["module","exports","App","state","imgArray","count","inputText","generatedNumber","incrementNumber","length","this","setInterval","setState","Math","min","Array","keys","console","log","className","style","transform","src","onClick","floor","random","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sJAAAA,EAAOC,QAAU,IAA0B,kC,qICItBC,G,wNACnBC,MAAM,CACJC,SAAS,CAAC,WAAY,YAAa,YAAa,aAChDC,MAAO,EACPC,UAAU,GACVC,gBAAiB,EACjBC,gBAAiB,G,kEAIC,IAAD,OACXC,EAAOC,KAAKP,MAAMC,SAASK,OAChCE,aAAY,WACV,EAAKC,UAAS,gBAAEP,EAAF,EAAEA,MAAF,MACb,CAACA,MAAOA,IAAQI,EAAQ,EAAII,KAAKC,IAAIT,EAAO,EAAGI,SAE/C,O,+BAIG,IAAD,SAC+DC,KAAKP,MAA5DC,GADR,EACCC,MADD,EACQD,UAAqBG,GAD7B,EACkBD,UADlB,EAC6BC,iBAAiBC,EAD9C,EAC8CA,gBACjC,YAAIO,MAAMX,EAASK,QAAQO,QAE9C,OADAC,QAAQC,IAAI,CAACX,kBAAiBC,oBAE5B,yBAAKW,UAAU,OACb,yBAAKA,UAAU,cAKb,yBAAKA,UAAU,YACfC,MAAO,CACLC,UAAU,UAAD,OAAYd,EAAZ,UAIT,yBAAKY,UAAU,YAAYG,IAAI,cAC/B,yBAAKH,UAAU,aAAaG,IAAI,cAChC,yBAAKH,UAAU,YAAYG,IAAI,cAC/B,yBAAKH,UAAU,cAAcG,IAAI,cACjC,yBAAKH,UAAU,aAAaG,IAAI,cAChC,yBAAKH,UAAU,eAAeG,IAAI,eAKtC,4BAAQC,QAAS,WACb,EAAKX,SAAS,CAACL,gBAAgBM,KAAKW,MAAsB,IAAhBX,KAAKY,UAAmB,QADtE,aAsBE,yBAAKN,UAAU,UACb,yBAAKA,UAAU,QACf,yBAAKA,UAAU,e,GAvEMO,IAAMC,YCCvCC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.68289114.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nexport default class App extends React.Component{\n  state={\n    imgArray:[\"melk.jpg\", \"melk1.jpg\", \"melk2.jpg\", \"melk3.jpg\"],\n    count: 1,\n    inputText:\"\",\n    generatedNumber: 0,\n    incrementNumber: 0,\n  }\n\n\n  componentDidMount(){\n    const length=this.state.imgArray.length\n     setInterval(()=>{\n       this.setState(({count}) => (\n        {count: count===length? 0 : Math.min(count +1, length)}\n      ))\n     }, 3000)\n   }\n\n\n  render(){\n    const {count, imgArray, inputText, generatedNumber, incrementNumber}=this.state\n    const numbersArray=[...Array(imgArray.length).keys()]\n    console.log({generatedNumber, incrementNumber})\n    return(\n      <div className=\"box\">\n        <div className=\"kleinebal\"\n\n\n        />\n\n          <div className=\"grootebal\"\n          style={{\n            transform: `rotate(${generatedNumber}deg)`\n\n          }\n          }>\n            <img className=\"helo wolf\" src=\"melk1.jpg\"/>\n            <img className=\"helo david\" src=\"melk1.jpg\"/>\n            <img className=\"helo olav\" src=\"melk1.jpg\"/>\n            <img className=\"helo joosep\" src=\"melk1.jpg\"/>\n            <img className=\"helo ruben\" src=\"melk1.jpg\"/>\n            <img className=\"helo roeland\" src=\"melk1.jpg\"/>\n\n\n\n        </div>\n        <button onClick={() =>{\n            this.setState({generatedNumber:Math.floor(Math.random() * 3000) + 1000})\n\n        }}>ZUIPUHHHH</button>\n      {/*  <div className=\"slider\">\n          <img src={imgArray[count]}/>\n          <div className=\"buttons\">{numbersArray.map((number) =>\n            <div className=\"dot\" onClick={() => (\n              this.setState({count:number})\n            )}/>\n          )}</div>\n        </div>\n        <div className=\"input\">\n        <input onChange={event => this.setState({inputText:event.target.value})}/>\n        <button onClick={() => this.setState(\n          {inputText:\"\",imgArray:[...imgArray,inputText]}\n      )}>\n        add\n        </button>\n        </div>*/}\n\n\n          <div className=\"doosje\">\n            <div className=\"dvd\"/>\n            <div className=\"ball\"/>\n          </div>\n\n\n\n\n\n\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}